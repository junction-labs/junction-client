name: Build global documentation

on:
  pull_request:
    paths:
      - docs/**
      - .github/workflows/docs-global.yml
  push:
    branches:
      - main
    paths:
      - docs/**
      - .github/workflows/docs-global.yml
  workflow_dispatch:

env:
  rust_stable: stable

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Get ruff version from requirements file
        id: version
        run: |
          VERSION=$(grep -m 1 -oP 'ruff==\K(.*)' junction-python/requirements-dev.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: chartboost/ruff-action@v1
        with:
          src: docs/source/
          version: ${{ steps.version.outputs.version }}
          args: check --no-fix

      - uses: chartboost/ruff-action@v1
        with:
          src: docs/source/
          version: ${{ steps.version.outputs.version }}
          args: format --diff

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: "Install Rust @ ${{ env.rust_stable }}"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
      - uses: Swatinem/rust-cache@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Create virtual environment
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: uv pip install -r docs/source/requirements.txt

      - name: Build documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: docs
        run: mkdocs build

      - name: Add .nojekyll
        if: github.event_name == 'push' && github.ref_name == 'main'
        working-directory: docs/site
        run: touch .nojekyll

      - name: Deploy docs
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/site
          clean-exclude: |
            api/python/
            api/node/
            api/rust/
          single-commit: true

      # Make sure documentation artifacts are not cached
      - name: Clean up documentation artifacts
        if: ${{ github.ref_name == 'main' }}
        run: rm -rf docs/site
