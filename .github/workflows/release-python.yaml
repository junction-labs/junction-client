name: Release Python

on:
  workflow_dispatch:
    inputs:
      sha:
        description: Git Commit SHA. Use the latest commit on main if left blank.
        type: string
      dry-run:
        description: Dry run. Defaults to true. Won't release to PyPI by default.
        type: boolean
        default: true
      include-docs:
        description: Publish docs to the Junction Labs website
        type: boolean
        default: true
      include-pypi:
        description: Publish packages to PyPI
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: "true"
          # cargo culted from Polars. this is probably this ring issue:
          #
          # https://github.com/pola-rs/polars/blob/abe5139f471f7b63104490813d316fc8497373c1/.github/workflows/release-python.yml#L200
          # https://github.com/briansmith/ring/issues/1728
          manylinux: ${{ matrix.platform.target == 'aarch64' && '2_24' || 'auto' }}
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist/*.whl

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: "true"
          manylinux: musllinux_1_2
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: "true"
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path junction-python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  pypi-publish:
    if: ${{ inputs.include-pypi }}
    needs: [linux, musllinux, windows, macos, sdist]
    environment:
      name: release-python
      url: https://pypi.org/project/junction-python/
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: show artifacts
        run: ls -lah dist/*
      - name: publish
        if: inputs.dry-run == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

  docs-publish:
    if: ${{ inputs.include-docs }}
    needs: [linux, musllinux, windows, macos, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      - name: Get version from Cargo.toml
        id: version
        working-directory: junction-python
        run: |
          echo "payload=$(cargo xtask version --json -p junction-python)" >> "$GITHUB_OUTPUT"

      - name: Trigger other workflows related to the release
        if: inputs.dry-run == false
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: python-release
          client-payload: |
            "${{ steps.version.outputs.payload }}"
