name: Release Python

on:
  workflow_dispatch:
    inputs:
      sha:
        description: Git Commit SHA. Use the latest commit on main if left blank.
        type: string
      dry-run:
        description: Dry run. Defaults to true. Won't release to PyPI by default.
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: 'true'
          # cargo culted from Polars. this is probably this ring issue:
          #
          # https://github.com/pola-rs/polars/blob/abe5139f471f7b63104490813d316fc8497373c1/.github/workflows/release-python.yml#L200
          # https://github.com/briansmith/ring/issues/1728
          manylinux: ${{ matrix.platform.target == 'aarch64' && '2_24' || 'auto' }}
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist/*.whl

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: 'true'
      - name: upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --manifest-path junction-python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path junction-python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  pypi-publish:
    name: Publish to PyPI
    needs: [linux, musllinux, windows, macos, sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-mutliple: true
      - name: show artifacts
        run: ls -lah dist/*
      - name: publish
        if: inputs.dry-run == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

  # release:
  #   name: Github Release
  #   runs-on: ubuntu-latest
  #   # needs: [linux, musllinux, windows, macos, sdist]
  #   needs: [linux, sdist]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         path: dist
  #     # update the tip-python tag to the head of this branch
  #     - uses: actions/github-script@v7
  #       with:
  #         script: |
  #           github.rest.git.updateRef({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             ref: "tags/tip-python",
  #             sha: context.sha,
  #           });
  #     # list everything we're going to upload
  #     - run: ls -lah dist/**/*.whl
  #     - run: ls -lah dist/wheels-sdist/*
  #     # remove existing assets
  #     - env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         gh release view tip-python --json assets --jq '.assets[].name' | xargs -IQ gh release delete-asset -y tip-python Q
  #     # upload wheels
  #     - run: gh release upload tip-python dist/**/*.whl
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     # upload sdist
  #     - run: gh release upload tip-python dist/wheels-sdist/*
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
