name: Build Reference documentation
#
# Why all in the one GHA? To reduce contention on github-pages-deploy-action
# where synchronous changes have uncertain impact, and concurrency controls
# allow a max queue depth of 1. This keeps things nice and serialized.
#

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  repository_dispatch:
    types:
      - python-release
      - node-release
      ## Note if you add to this list, the job that _calls in_ must have its permissions
      ## already set for some reason:
      ##  permissions:
      ##    contents: write

env:
  rust_stable: stable

permissions:
  contents: write

jobs:
  what:
    name: doc vars
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.vars.outputs.dev }}
      version: ${{ steps.vars.outputs.version }}
      node: ${{ steps.vars.outputs.node}}
      python: ${{ steps.vars.outputs.python }}
    steps:
      - name: handle inputs
        id: vars
        shell: bash
        run: |
          echo "dev=${{ github.event_name == 'push' && github.ref_name == 'main' }}" >> $GITHUB_OUTPUT
          echo "version=${{ github.event.client_payload.version || 'dev' }}" >> $GITHUB_OUTPUT
          echo "node=${{ github.event_name == 'repository_dispatch' && github.event.action == 'node-release' }}" >> $GITHUB_OUTPUT
          echo "python=${{ github.event_name == 'repository_dispatch' && github.event.action == 'python-release' }}" >> $GITHUB_OUTPUT

  build-docs:
    runs-on: ubuntu-latest
    needs: [what]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: "Install Rust @ ${{ env.rust_stable }}"
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
      - uses: Swatinem/rust-cache@v2

      - name: node reference docs
        uses: ./.github/actions/node-reference-docs
        with:
          node-version: 22
          doc-version: ${{ needs.what.outputs.version }}
          build-dev: ${{ needs.what.outputs.dev }}
          build-stable: ${{ needs.what.outputs.node }}

      - name: Python reference docs
        uses: ./.github/actions/python-reference-docs
        with:
          python-version: 3.12
          doc-version: ${{ needs.what.outputs.version }}
          build-dev: ${{ needs.what.outputs.dev }}
          build-stable: ${{ needs.what.outputs.python }}

      # Rustdoc only deploys to dev, since the stable versions are all hosted on
      # docs.rs when we release.
      #
      # TODO: move this into a composite action?
      - name: Build Rust documentation
        run: cargo xtask core doc

      - name: Deploy Rust dev docs
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: target/doc/
          target-folder: api/rust/dev
          single-commit: true

      - name: Clean up rust dev docs artifacts
        run: rm -rf target/doc
