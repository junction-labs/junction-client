searchState.loadedDescShard("junction_core", 0, "The core implementation for Junction - an xDS …\nA Backend and the LoadBalancer it’s configured with.\nA service discovery client that looks up URL information …\nContains the error value\nAn error when using the Junction client.\nAn outgoing HTTP Request, before any rewrites or …\nThe result of making an HTTP request.\nThe context required to select an address from a backend. …\nContains the success value\nThe result of resolving a route (see Client::resolve_route…\nAn opaque string used to version an xDS resource.\nA <code>Result</code> alias where the <code>Err</code> case is <code>junction_core::Error</code>.\nThe result of selecting an endpoint (see …\nThe client received a complete HTTP response with a status …\nThe client didn’t receive a complete HTTP response. This …\nThe client received a complete HTTP response with a status …\nAn Uri with an <code>http</code> or <code>https</code> scheme and a non-empty …\nA single xDS configuration object, with additional …\nThe selected endpoint address\nThe backend selected as part of route resolution.\nBuild a new dynamic client, spawning a new ADS client in …\nCheck route resolution.\nStart a gRPC CSDS server on the given port. To run the …\nDump the Client’s current table of BackendLbs, merging …\nReturn the endpoints currently in cache for this backend.\nDump the Client’s current table of Routes, merging …\nDump the client’s current cache of xDS resources, as …\nDump xDS resources that failed to update. This is a view …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a request from individual parts.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this is a temporary error.\nReport the status of an externally made HTTP request made …\nResolve an HTTP method, URL, and headers into an Endpoint.\nResolve an HTTP method, URL, and headers to a target …\nThe resolved route.\nThe index of the rule that matched the request.\nSelect an endpoint address for this backend from the set …\nBuild a client with static configuration. This client will …\nConstruct a client that uses fully static configuration …")